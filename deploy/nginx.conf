http {
    upstream api_backend {
        server newsletter-api:8080;
    }

    upstream batch_backend {
        server newsletter-batch:8082;
    }

    upstream admin_backend {
        server newsletter-admin:8083;
    }

    upstream mongo_express{
        server newsletter-mongo-express:8081;
    }

    # HTTP 서버 (ACME challenge용 + HTTPS 리다이렉트)
    server {
        listen 80;
        server_name fairy-band.com;

        # Let's Encrypt ACME challenge 허용
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 나머지는 HTTPS로 리다이렉트
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS 서버
    server {
        listen 443 ssl;
        server_name fairy-band.com;

        # SSL 인증서 설정
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        # API 서버로 프록시
        location /api/ {
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /api;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

            sub_filter_once off;
            sub_filter 'href="/' 'href="/api/';
            sub_filter 'src="/' 'src="/api/';
        }

        # Batch 서버로 프록시
        location /batch/ {
            proxy_pass http://batch_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        # Admin 서버로 프록시
        location /admin/ {
            proxy_pass http://admin_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        location /mongo-express/ {
            proxy_pass http://mongo_express/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            sub_filter_once off;
            sub_filter 'href="/' 'href="/mongo-express/';
            sub_filter 'src="/' 'src="/mongo-express/';
        }

        # 메인 페이지
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }

        # 글로벌 헬스체크 엔드포인트
        location /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"UP"}';
        }

        # 헬스체크 엔드포인트
        location /api/health {
            proxy_pass http://api_backend/health;
            access_log off;
        }

        location /batch/health {
            proxy_pass http://batch_backend/health;
            access_log off;
        }

        location /admin/health {
            proxy_pass http://admin_backend/health;
            access_log off;
        }
    }
}
