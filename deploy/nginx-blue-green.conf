events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Blue-Green 업스트림 설정
    upstream api_backend_blue {
        server newsletter-api-blue:8080 max_fails=3 fail_timeout=30s;
    }

    upstream api_backend_green {
        server newsletter-api-green:8080 max_fails=3 fail_timeout=30s;
    }

    upstream batch_backend_blue {
        server newsletter-batch-blue:8082 max_fails=3 fail_timeout=30s;
    }

    upstream batch_backend_green {
        server newsletter-batch-green:8082 max_fails=3 fail_timeout=30s;
    }

    upstream admin_backend_blue {
        server newsletter-admin-blue:8083 max_fails=3 fail_timeout=30s;
    }

    upstream admin_backend_green {
        server newsletter-admin-green:8083 max_fails=3 fail_timeout=30s;
    }

    # 현재 활성 환경을 결정하는 맵
    # ./active-env.conf 파일에서 $active_env 변수를 읽음
    include /etc/nginx/active-env.conf;

    # 활성 환경에 따른 업스트림 선택
    map $active_env $api_backend {
        blue api_backend_blue;
        green api_backend_green;
        default api_backend_blue;
    }

    map $active_env $batch_backend {
        blue batch_backend_blue;
        green batch_backend_green;
        default batch_backend_blue;
    }

    map $active_env $admin_backend {
        blue admin_backend_blue;
        green admin_backend_green;
        default admin_backend_blue;
    }

    upstream mongo_express {
        server newsletter-mongo-express:8081;
    }

    # HTTP 서버 (ACME challenge용 + HTTPS 리다이렉트)
    server {
        listen 80;
        server_name fairy-band.com;

        # Let's Encrypt ACME challenge 허용
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 나머지는 HTTPS로 리다이렉트
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS 서버
    server {
        listen 443 ssl;
        server_name fairy-band.com;

        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/fairy-band.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fairy-band.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        # 환경 관리 엔드포인트 (관리자 전용)
        location /admin/deployment/status {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"active_environment":"$active_env","timestamp":"$time_iso8601"}';
        }

        # API 서버로 프록시
        location /api/ {
            proxy_pass http://$api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /api;
            proxy_set_header X-Active-Environment $active_env;

            # 연결 타임아웃 설정
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

            sub_filter_once off;
            sub_filter 'href="/' 'href="/api/';
            sub_filter 'src="/' 'src="/api/';
        }

        # Batch 서버로 프록시
        location /batch/ {
            proxy_pass http://$batch_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Active-Environment $active_env;

            # 연결 타임아웃 설정
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        # 로그인 관련 경로
        location ~ ^/(login|oauth2)(/|$) {
            proxy_pass http://$admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Active-Environment $active_env;

            # 연결 타임아웃 설정
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        # Admin 서버로 프록시
        location /admin/ {
            proxy_pass http://$admin_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Active-Environment $active_env;

            # 연결 타임아웃 설정
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        location /mongo-express/ {
            proxy_pass http://mongo_express/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            sub_filter_once off;
            sub_filter 'href="/' 'href="/mongo-express/';
            sub_filter 'src="/' 'src="/mongo-express/';
        }

        # 메인 페이지 - 관리자 로그인으로 리디렉션
        location / {
            return 301 /login;
        }

        # 글로벌 헬스체크 엔드포인트
        location /health {
            access_log off;
            add_header Content-Type application/json;
            add_header X-Active-Environment $active_env;
            return 200 '{"status":"UP","environment":"$active_env"}';
        }

        # 헬스체크 엔드포인트
        location /api/health {
            proxy_pass http://$api_backend/health;
            proxy_set_header X-Active-Environment $active_env;
            access_log off;
        }

        location /batch/health {
            proxy_pass http://$batch_backend/health;
            proxy_set_header X-Active-Environment $active_env;
            access_log off;
        }

        location /admin/health {
            proxy_pass http://$admin_backend/health;
            proxy_set_header X-Active-Environment $active_env;
            access_log off;
        }

        # Blue 환경 직접 접근 (테스트용)
        location /blue/ {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;

            rewrite ^/blue/api/(.*) /api/$1 break;
            rewrite ^/blue/batch/(.*) /batch/$1 break;
            rewrite ^/blue/admin/(.*) /admin/$1 break;
            rewrite ^/blue/(.*) /$1 break;

            proxy_pass http://api_backend_blue;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Active-Environment "blue";
        }

        # Green 환경 직접 접근 (테스트용)
        location /green/ {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;

            rewrite ^/green/api/(.*) /api/$1 break;
            rewrite ^/green/batch/(.*) /batch/$1 break;
            rewrite ^/green/admin/(.*) /admin/$1 break;
            rewrite ^/green/(.*) /$1 break;

            proxy_pass http://api_backend_green;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Active-Environment "green";
        }
    }
}
