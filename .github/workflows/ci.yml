name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ktlint:
    name: Ktlint Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Run ktlint
      run: ./gradlew ktlintCheck

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/build/test-results/test/
          **/build/reports/tests/test/
        retention-days: 7
        
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: '**/build/test-results/test/*.xml'
        reporter: java-junit
        fail-on-error: true

  discord-notification:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: [ktlint, build-and-test]
    if: always()
    
    steps:
    - name: Get workflow conclusion
      id: workflow-conclusion
      run: |
        if [[ "${{ needs.ktlint.result }}" == "failure" ]] || [[ "${{ needs.build-and-test.result }}" == "failure" ]]; then
          echo "conclusion=failure" >> $GITHUB_OUTPUT
        elif [[ "${{ needs.ktlint.result }}" == "cancelled" ]] || [[ "${{ needs.build-and-test.result }}" == "cancelled" ]]; then
          echo "conclusion=cancelled" >> $GITHUB_OUTPUT
        else
          echo "conclusion=success" >> $GITHUB_OUTPUT
        fi

    - name: Send Discord notification
      uses: sarisia/actions-status-discord@v1.15.0
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ steps.workflow-conclusion.outputs.conclusion }}
        title: "CI Build"
        description: |
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref_name }}
          **Commit:** ${{ github.sha }}
          **Author:** ${{ github.actor }}
        color: ${{ steps.workflow-conclusion.outputs.conclusion == 'success' && 0x00ff00 || steps.workflow-conclusion.outputs.conclusion == 'failure' && 0xff0000 || 0xffff00 }} 