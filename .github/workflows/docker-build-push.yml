name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: gradle

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: api
          push: true
          tags: |
            ahj0/fairy-band:api
            ahj0/fairy-band:api-${{ github.sha }}
          platforms: linux/amd64

      - name: Build and push Batch image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: batch
          push: true
          tags: |
            ahj0/fairy-band:batch
            ahj0/fairy-band:batch-${{ github.sha }}
          platforms: linux/amd64

      - name: Build and push Admin image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: admin
          push: true
          tags: |
            ahj0/fairy-band:admin
            ahj0/fairy-band:admin-${{ github.sha }}
          platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Check if deploy directory exists
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          export SSHPASS="${SSHPASS}"
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ~/deploy"

      - name: Deploy configuration files
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          export SSHPASS="${SSHPASS}"
          echo "Deploying docker-compose.yml..."
          sshpass -e scp -v -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/deploy/
          echo "Deploying nginx.conf..."
          sshpass -e scp -v -o StrictHostKeyChecking=no nginx.conf ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/deploy/
          echo "Deploying init-mongo.js..."
          sshpass -e scp -v -o StrictHostKeyChecking=no init-mongo.js ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/deploy/

      - name: Deploy deployment script
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          export SSHPASS="${SSHPASS}"
          echo "Deploying deploy.sh..."
          sshpass -e scp -v -o StrictHostKeyChecking=no deploy.sh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/deploy/

      - name: Execute deployment script
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          export SSHPASS="${SSHPASS}"
          echo "Executing deployment script..."
          sshpass -e ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "cd ~/deploy && chmod +x deploy.sh && ./deploy.sh"
